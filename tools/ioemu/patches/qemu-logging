Index: ioemu/vl.c
===================================================================
--- ioemu.orig/vl.c	2006-08-06 02:15:48.550893605 +0100
+++ ioemu/vl.c	2006-08-06 02:16:31.246133963 +0100
@@ -5234,7 +5234,7 @@
            "-S              freeze CPU at startup (use 'c' to start execution)\n"
            "-s              wait gdb connection to port %d\n"
            "-p port         change gdb connection port\n"
-           "-d item1,...    output log to %s (use -d ? for a list of log items)\n"
+           "-l item1,...    output log to %s (use -d ? for a list of log items)\n"
            "-hdachs c,h,s[,t]  force hard disk 0 physical geometry and the optional BIOS\n"
            "                translation (t=none or lba) (usually qemu can guess them)\n"
            "-L path         set the directory for the BIOS and VGA BIOS\n"
@@ -5307,7 +5307,7 @@
     QEMU_OPTION_S,
     QEMU_OPTION_s,
     QEMU_OPTION_p,
-    QEMU_OPTION_d,
+    QEMU_OPTION_l,
     QEMU_OPTION_hdachs,
     QEMU_OPTION_L,
 #ifdef USE_CODE_COPY
@@ -5380,7 +5380,7 @@
     { "S", 0, QEMU_OPTION_S },
     { "s", 0, QEMU_OPTION_s },
     { "p", HAS_ARG, QEMU_OPTION_p },
-    { "d", HAS_ARG, QEMU_OPTION_d },
+    { "l", HAS_ARG, QEMU_OPTION_l },
     { "hdachs", HAS_ARG, QEMU_OPTION_hdachs },
     { "L", HAS_ARG, QEMU_OPTION_L },
 #ifdef USE_CODE_COPY
@@ -5640,6 +5640,8 @@
     char usb_devices[MAX_USB_CMDLINE][128];
     int usb_devices_index;
 
+    char qemu_dm_logfilename[64];
+
     LIST_INIT (&vm_change_state_head);
 #ifndef _WIN32
     {
@@ -5715,6 +5717,11 @@
     nb_nics = 0;
     /* default mac address of the first network interface */
     
+    /* init debug */
+    sprintf(qemu_dm_logfilename, "/var/log/xen/qemu-dm.%d.log", getpid());
+    cpu_set_log_filename(qemu_dm_logfilename);
+    cpu_set_log(0);
+    
     optind = 1;
     for(;;) {
         if (optind >= argc)
@@ -5905,7 +5912,7 @@
                     exit(1);
                 }
                 break;
-            case QEMU_OPTION_d:
+            case QEMU_OPTION_l:
                 {
                     int mask;
                     CPULogItem *item;
