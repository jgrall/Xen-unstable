The blktap has been rewritten substantially based on the current
blkback driver.  I've removed passthrough support, as this is broken
by the move to grant tables and the lack of transitive grants.  A
blktap VM is now only capable of terminating block requests in
userspace.

ublkback/ contains a _very_ initial cut at a user-level version of the block
backend driver.  It gives a working example of how the current tap
interfaces are used, in particular w.r.t. the vbd directories in
xenstore.

parallax/ contains fairly recent parallax code.  This does not run on
the changed blktap interface, but should only be a couple of hours
work to get going again.

All of the tricky bits are done, but there is plenty of cleaning to
do, and the top-level functionality is not here yet.  At the moment,
the daemon ignores the pdev requested by the tools and opens the file 
or device specified by TMP_IMAGE_FILE_NAME in ublkback.c.

TODO:
1. Fix to allow pdev in the store to specify the device to open.
2. Add support (to tools as well) to mount arbitrary files...
   just write the filename to mount into the store, instead of pdev.
3. Reeximine blkif refcounting, it is almost certainly broken at the moment.
   - creating a blkif should take a reference.
   - each inflight request should take a reference on dequeue in blktaplib
   - sending responses should drop refs.
   - blkif should be implicitly freed when refcounts fall to 0.
4. Modify the parallax req/rsp code as per ublkback to use the new tap 
   interfaces. 
5. Write a front end that allows parallax and normal mounts to coexist
6. Allow blkback and blktap to run at the same time.
