=head1 NAME

xm - Xen management user interface

=head1 SYNOPSIS

xm <subcommand> [args]

=head1 DESCRIPTION

The B<xm> program is the main interface for managing Xen guest
domains. The program can be used to create, pause, and shutdown
domains. It can also be used to list current domains, enable or pin
VCPUs, and attach or detach virtual block devices.

The basic structure of every xm command is almost always:

  xm <SubCommand> <DomId> [OPTIONS]

Where I<SubCommand> is one of the sub commands listed below, I<DomId>
is the numeric domain id, or the domain name (which will be internally
translated to domain id), and I<OPTIONS> are sub command specific
options.  There are a few exceptions to this rule in the cases where
the sub command in question acts on all domains, the entire machine,
or directly on the xen hypervisor.  Those exceptions will be clear for
each of those sub commands.

=head1 NOTES

All B<xm> opperations rely upon the Xen control daemon, aka B<xend>.
For any xm commands to run xend must also be running.  For this reason
you should start xend as a service when your system first boots using
xen.

Most B<xm> commands require root privledges to run due to the
communications channels used to talk to the hypervisor.  Running as
non root will return an error.

=head1 DOMAIN SUBCOMMANDS

The following sub commands manipulate domains directly, as stated
previously most commands take DomId as the first parameter.

=over 4

=item I<console> <DomId>

Attach to domain DomId's console.  If you've set up your Domains to
have a traditional log in console this will look much like a normal
text log in screen.

This uses the back end xenconsole service which currently only
works for para-virtual domains.  

The attached console will perform much like a standard serial console,
so running curses based interfaces over the console B<is not
advised>.  Vi tends to get very odd when using it over this interface.

=item I<create> [-c] <ConfigFile> [Name=Value]..

The create sub command requires a ConfigFile and can optional take a
series of name value pairs that add to or override variables defined
in the config file.  See L<xmdomain.cfg> for full details of that file
format, and possible options used in either the ConfigFile or
Name=Value combinations.

ConfigFile can either be an absolute path to a file, or a relative
path to a file located in /etc/xen.

Create will return B<as soon> as the domain is started.  This B<does
not> mean the guest OS in the domain has actually booted, or is
available for input.

B<OPTIONS>

=over 4 

=item I<-c>

Attache console to the domain as soon as it has started.  This is
useful for determining issues with crashing domains.

=back

B<EXAMPLES>

=over 4

=item Config file in /etc/xen

xm create Fedora4

This creates a domain with the file /etc/xen/Fedora4, and returns as
soon as it is run.

=item Creating a domain without ConfigFile

 xm create /dev/null ramdisk=initrd.img \
    kernel=/boot/vmlinuz-2.6.12.6-xenU \
    name=ramdisk nics=0 vcpus=1 \
    memory=64 root=/dev/ram0

This creates the domain without using a config file (more specifically
using /dev/null as an empty config file), kernel and ramdisk as
specified, setting the name of the domain to "ramdisk", also disabling
virtual networking.  (This example comes from the xm-test test suite.)

=back

=item I<destroy> <DomId>

Immediately terminate the domain DomId.  This doesn't give the domain
OS any chance to react, and it the equivalent of ripping the power
cord out on a physical machine.  In most cases you will want to use
the B<shutdown> command instead.

=item I<domid> <DomName>

Converts a domain name to a domain id using xend's internal mapping.

=item I<domname> <DomId>

Converts a domain id to a domain name using xend's internal mapping.

=item I<help> [--long]

Displays the short help message (i.e. common commands).

The I<--long> option prints out the complete set of B<xm> subcommands,
grouped by function.

=item I<list> [--long] [DomId, ...]

Prints information about running domains.

An example format for the list is as follows:

 Name                              ID Mem(MiB) VCPUs State  Time(s)
 Domain-0                           0       98     1 r-----  5068.6
 Fedora3                          164      128     1 r-----     7.6
 Fedora4                          165      128     1 ------     0.6
 Mandrake2006                     166      128     1 -b----     3.6
 Mandrake10.2                     167      128     1 ------     2.5
 Suse9.2                          168      100     1 ------     1.8

Name is the name of the domain.  ID the domain numeric id.  Mem is the
size of the memory allocated to the domain.  VCPUS is the number of
VCPUS allocated to domain.  State is the run state (see below).  Time
is the total run time of the domain as accounted for by Xen.

The State field lists 6 states for a Xen Domain, and which ones the
current Domain is in.

=item I<mem-max> <DomId> <Mem>

Set domain maximum memory limit to Mem. Mem is in Megabytes. This is the upper memory mark for how much memory a domain can have.

=item I<mem-set> <DomId> <Mem>

Set domain's memory, in Megabytes. Mem must be less than or equal to the maximum memory for the domain.

=item I<migrate> <DomId> <Host> [Options]

Migrate a domain to another Host machine. B<Xend> must be running on other host machine and there must be sufficient resources as well.

=over 4

Additional Options:

    -l, --live                    Use live migration.
    -r, --resource <Mbit value>   Set resource level.

=back

=item I<pause> <DomId>

Pause a domain's execution.

=item I<reboot> [Options] <DomId>

Reboot a domain.

=over 4

Additional Options:

    -a, --all        reboot all domains.
    -w, --wait       Wait for shutdown to complete.

=back

=item I<restore> <File>

Create a domain from saved state File.

=item I<save> <DomId> <File>

Save domain state to File. Saves domain configuration to File as well.

=item I<shutdown> [Options] <DomId>

Shutdown a domain.

=over 4

Additional Options:

    -a, --all        Shutdown all domains.
    -H, --halt       Shutdown domain without reboot.
    -R, --reboot     Shutdown and reboot domain.
    -w, --wait       Wait for shutdown to complete.

=back

=item I<sysrq> <DomId> <letter>

Send a sysrq to a domain.

=item I<unpause> <DomId>

Unpause a paused domain.

=item I<set-vcpus> <DomId> <VCPUs>

Enable a specific number of VCPUs for a domain. Subcommand only enables or disables already configured VCPUs for domain.

=item I<vpcu-list> [DomID]

Lists VCPU information for a specific domain or all domains if DomID not given.

=item I<vcpu-pin> <DomId> <VCPU> <CPUs>

Sets VCPU to only run on specific CPUs.

=back

=head1 XEN HOST SUBCOMMANDS

=over 4

=item I<dmesg> [OPTION]

Read or clear Xen's message buffer. The buffer contains Xen boot, warning, and error messages.

=over 4

Additional Option:

    -c, --clear        Clears Xen's message buffer.

=back

=item I<info>

Get information about Xen host.

=item I<log>

Print B<xend> log.

=item I<top>

Monitor system and domains in real-time.

=back

=head1 SCHEDULER SUBCOMMANDS

=over 4

=item I<sched-bvt> <Parameters>

Set Borrowed Virtual Time (BVT) scheduler parameters. There are five parameters, which are given in order below.

=over 4

Parameters:

    mcuadv - Minimum Charging Unit (MCU) advance.
    warpback - Warp back time allowed.
    warpvalue - Warp value.
    warpl - Warp maximum limit.
    warpu - Unwarped minimum limit.

=back 

=item I<sched-bvt-ctxallow> <Allow>

Sets the BVT scheduler's context switch allowance. Allow is the minimum time slice allowed to run before being pre-empted.

=item I<sched-sedf> <Parameters>

Set simple sEDF scheduler parameters. Use the following parametersin order.

=over 4

Parameters:

    period - in nanoseconds
    slice - in nanoseconds
    latency-hint - scaled period if domain is doing heavy I/O
    extratime - flag for allowing domain to run in extra time.
    weight - another way of setting cpu slice.

=back

=back

=head1 VIRTUAL DEVICE COMMANDS

=over 4

=item I<block-attach <DomId> <BackDev> <FrontDev> <Mode> [BackDomId]

Create a new virtual block device.

=item I<block-detach> <DomId> <DevId>

Destroy a domain's virtual block device. DevId may either be a device ID or the device name as mounted in the guest.

=item I<block-list> <DomId>

List virtual block devices for a domain.

=item I<network-limit> <DomId> <Vif> <Credit> <Period>

Limit the transmission rate of a virtual network interface.

=item I<network-list> <DomId>

List virtual network interfaces for a domain.

=back

=head1 VNET COMMANDS

The Virtual Network interfaces for Xen 

=over 4

=item I<vnet-list> [-l|--long]

List vnets.

=item I<vnet-create> <config>

Create a vnet from a config file.

=item I<vnet-delete> <vnetid>

Delete a vnet.

=back

=head1 EXAMPLES

=head1 SEE ALSO

B<xmdomain.cfg>(5)

=head1 AUTHOR

  Sean Dague <sean at dague dot net>
  Daniel Stekloff <dsteklof at us dot ibm dot com>

=head1 BUGS
