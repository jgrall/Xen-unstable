#
# This Kconfig describe xen options
#

mainmenu "Xen Configuration"

config XEN
	bool
	default y if X86_XEN || X86_64_XEN
	help
	  This is the Linux Xen port.

config NO_IDLE_HZ
	bool
	depends on XEN
	default y

if XEN
menu "XEN"

config XEN_PRIVILEGED_GUEST
	bool "Privileged Guest (domain 0)"
	depends XEN
	default n
	select XEN_PHYSDEV_ACCESS
	help
	  Support for privileged operation (domain 0)

config XEN_UNPRIVILEGED_GUEST
	bool
	default !XEN_PRIVILEGED_GUEST

config XEN_PHYSDEV_ACCESS
	bool "Physical device access"
	depends XEN_PRIVILEGED_GUEST
	default XEN_PRIVILEGED_GUEST
	help
	  Assume access is available to physical hardware devices
	  (e.g., hard drives, network cards). This allows you to configure
	  such devices and also includes some low-level support that is
	  otherwise not compiled into the kernel.

config XEN_BLKDEV_BACKEND
	bool "Block-device backend driver"
	depends on XEN_PHYSDEV_ACCESS
	default y
	help
	  The block-device backend driver allows the kernel to export its
	  block devices to other guests via a high-performance shared-memory
	  interface.

config XEN_BLKDEV_TAP_BE
        bool "Block Tap support for backend driver (DANGEROUS)"
        depends on XEN_BLKDEV_BACKEND
        default n
        help
          If you intend to use the block tap driver, the backend domain will
          not know the domain id of the real frontend, and so will not be able
          to map its data pages.  This modifies the backend to attempt to map
          from both the tap domain and the real frontend.  This presents a
          security risk, and so should ONLY be used for development
          with the blktap.  This option will be removed as the block drivers are
          modified to use grant tables.

config XEN_NETDEV_BACKEND
	bool "Network-device backend driver"
	depends on XEN_PHYSDEV_ACCESS
	default y
	help
	  The network-device backend driver allows the kernel to export its
	  network devices to other guests via a high-performance shared-memory
	  interface.

config XEN_NETDEV_PIPELINED_TRANSMITTER
	bool "Pipelined transmitter (DANGEROUS)"
	depends on XEN_NETDEV_BACKEND
	default n
	help
	  If the net backend is a dumb domain, such as a transparent Ethernet
	  bridge with no local IP interface, it is safe to say Y here to get
	  slightly lower network overhead.
	  If the backend has a local IP interface; or may be doing smart things
	  like reassembling packets to perform firewall filtering; or if you
	  are unsure; or if you experience network hangs when this option is
	  enabled; then you must say N here.

config XEN_TPMDEV_BACKEND
	bool "TPM-device backend driver"
	depends on XEN_PHYSDEV_ACCESS
	default n
	help
	  The TPM-device backend driver

config XEN_TPMDEV_CLOSE_IF_VTPM_FAILS
	bool "TPM backend closes upon vTPM failure"
	depends on XEN_TPMDEV_BACKEND
	default n
	help
	  The TPM backend closes the channel if the vTPM in userspace indicates
	  a failure. The corresponding domain's channel will be closed.
	  Say Y if you want this feature.

config XEN_BLKDEV_FRONTEND
	tristate "Block-device frontend driver"
	depends on XEN
	default y
	help
	  The block-device frontend driver allows the kernel to access block
	  devices mounted within another guest OS. Unless you are building a
	  dedicated device-driver domain, or your master control domain
	  (domain 0), then you almost certainly want to say Y here.

config XEN_NETDEV_FRONTEND
	tristate "Network-device frontend driver"
	depends on XEN
	default y
	help
	  The network-device frontend driver allows the kernel to access
	  network interfaces within another guest OS. Unless you are building a
	  dedicated device-driver domain, or your master control domain
	  (domain 0), then you almost certainly want to say Y here.

config XEN_BLKDEV_TAP
	bool "Block device tap driver"
	default n
	help
	  This driver allows a VM to interact on block device channels
	  to other VMs.  Block messages may be passed through or redirected
	  to a character device, allowing device prototyping in application
	  space.  Odds are that you want to say N here.

config XEN_TPMDEV_FRONTEND
	bool "TPM-device frontend driver"
	default n
	select TCG_TPM
	select TCG_XEN
	help
	  The TPM-device frontend driver.

config XEN_SHADOW_MODE
	bool "Fake shadow mode"
	default n
	help
	  fakes out a shadow mode kernel


config XEN_SCRUB_PAGES
	bool "Scrub memory before freeing it to Xen"
	default y
	help
	  Erase memory contents before freeing it back to Xen's global
	  pool. This ensures that any secrets contained within that
	  memory (e.g., private keys) cannot be found by other guests that
	  may be running on the machine. Most people will want to say Y here.
	  If security is not a concern then you may increase performance by
	  saying N.

config XEN_DISABLE_SERIAL
	bool "Disable serial port drivers"
	default y
	help
	  Disable serial port drivers, allowing the Xen console driver
	  to provide a serial console at ttyS0.

endmenu

config HAVE_ARCH_ALLOC_SKB
	bool
	default y

config HAVE_ARCH_DEV_ALLOC_SKB
	bool
	default y

endif
