#!/bin/bash
# restructure directories to match future drivers/xen plan
# and move aside xen/x86 specific changes
# WARNING!: This directory movement really confuses hg which makes
# it difficult to do development in a directory which is being used
# for building (as all files in mv'd directories are thought by hg
# to have been deleted).  I don't know how to avoid this right now,
# but if someone has a better way, I'm all ears

function try_to_mv() {
	if [ ! -e $2 ]
	then
		mv $1 $2
	fi
}

try_to_mv mm/Kconfig mm/Kconfig.xen-x86

# need to grab a couple of xen-modified files for generic_page_range and
# typedef pte_fn_t which are used by driver/xen blkif
#ln -sf ../mm.xen-x86/memory.c mm/
#ln -sf ../linux.xen-x86/mm.h include/linux/

#eventually asm-xsi-offsets needs to be part of hypervisor.h/hypercall.h
ln -sf ../../../../xen/include/asm-ia64/asm-xsi-offsets.h include/asm-ia64/xen/

#ia64 drivers/xen isn't fully functional yet, workaround...
#also ignore core/evtchn.c which uses a different irq mechanism than ia64
#(warning: there be dragons here if these files diverge)
ln -sf ../../arch/ia64/xen/drivers/Makefile drivers/xen/Makefile
ln -sf ../../../arch/ia64/xen/drivers/coreMakefile drivers/xen/core/Makefile

#not sure where these ia64-specific files will end up in the future
ln -sf ../../../arch/ia64/xen/drivers/xenia64_init.c drivers/xen/core
ln -sf ../../../arch/ia64/xen/drivers/evtchn_ia64.c drivers/xen/core

#still a few x86-ism's in various drivers/xen files, patch them
#cd drivers/xen
#if [ ! -e ia64.patch.semaphore ]
#then
#	cat ../../arch/ia64/xen/drivers/patches/* | patch -p1 -b
#fi
#touch ia64.patch.semaphore
#cd ../..
